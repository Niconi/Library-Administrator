#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PROJECT_AKHIR
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PROJECT")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDataBuku(DataBuku instance);
    partial void UpdateDataBuku(DataBuku instance);
    partial void DeleteDataBuku(DataBuku instance);
    partial void InsertPeminjaman(Peminjaman instance);
    partial void UpdatePeminjaman(Peminjaman instance);
    partial void DeletePeminjaman(Peminjaman instance);
    partial void InsertPengembalian(Pengembalian instance);
    partial void UpdatePengembalian(Pengembalian instance);
    partial void DeletePengembalian(Pengembalian instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::PROJECT_AKHIR.Properties.Settings.Default.PROJECTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DataBuku> DataBukus
		{
			get
			{
				return this.GetTable<DataBuku>();
			}
		}
		
		public System.Data.Linq.Table<Peminjaman> Peminjamans
		{
			get
			{
				return this.GetTable<Peminjaman>();
			}
		}
		
		public System.Data.Linq.Table<Pengembalian> Pengembalians
		{
			get
			{
				return this.GetTable<Pengembalian>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataBuku")]
	public partial class DataBuku : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_Buku;
		
		private string _Judul_Buku;
		
		private int _Kuantitas;
		
		private string _Kategori;
		
		private string _Penerbit;
		
		private EntitySet<Peminjaman> _Peminjamans;
		
		private EntitySet<Pengembalian> _Pengembalians;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_BukuChanging(string value);
    partial void OnId_BukuChanged();
    partial void OnJudul_BukuChanging(string value);
    partial void OnJudul_BukuChanged();
    partial void OnKuantitasChanging(int value);
    partial void OnKuantitasChanged();
    partial void OnKategoriChanging(string value);
    partial void OnKategoriChanged();
    partial void OnPenerbitChanging(string value);
    partial void OnPenerbitChanged();
    #endregion
		
		public DataBuku()
		{
			this._Peminjamans = new EntitySet<Peminjaman>(new Action<Peminjaman>(this.attach_Peminjamans), new Action<Peminjaman>(this.detach_Peminjamans));
			this._Pengembalians = new EntitySet<Pengembalian>(new Action<Pengembalian>(this.attach_Pengembalians), new Action<Pengembalian>(this.detach_Pengembalians));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Buku", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_Buku
		{
			get
			{
				return this._Id_Buku;
			}
			set
			{
				if ((this._Id_Buku != value))
				{
					this.OnId_BukuChanging(value);
					this.SendPropertyChanging();
					this._Id_Buku = value;
					this.SendPropertyChanged("Id_Buku");
					this.OnId_BukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Judul_Buku", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Judul_Buku
		{
			get
			{
				return this._Judul_Buku;
			}
			set
			{
				if ((this._Judul_Buku != value))
				{
					this.OnJudul_BukuChanging(value);
					this.SendPropertyChanging();
					this._Judul_Buku = value;
					this.SendPropertyChanged("Judul_Buku");
					this.OnJudul_BukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kuantitas", DbType="Int NOT NULL")]
		public int Kuantitas
		{
			get
			{
				return this._Kuantitas;
			}
			set
			{
				if ((this._Kuantitas != value))
				{
					this.OnKuantitasChanging(value);
					this.SendPropertyChanging();
					this._Kuantitas = value;
					this.SendPropertyChanged("Kuantitas");
					this.OnKuantitasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kategori", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Kategori
		{
			get
			{
				return this._Kategori;
			}
			set
			{
				if ((this._Kategori != value))
				{
					this.OnKategoriChanging(value);
					this.SendPropertyChanging();
					this._Kategori = value;
					this.SendPropertyChanged("Kategori");
					this.OnKategoriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Penerbit", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Penerbit
		{
			get
			{
				return this._Penerbit;
			}
			set
			{
				if ((this._Penerbit != value))
				{
					this.OnPenerbitChanging(value);
					this.SendPropertyChanging();
					this._Penerbit = value;
					this.SendPropertyChanged("Penerbit");
					this.OnPenerbitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataBuku_Peminjaman", Storage="_Peminjamans", ThisKey="Id_Buku", OtherKey="Id_Buku")]
		public EntitySet<Peminjaman> Peminjamans
		{
			get
			{
				return this._Peminjamans;
			}
			set
			{
				this._Peminjamans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataBuku_Pengembalian", Storage="_Pengembalians", ThisKey="Id_Buku", OtherKey="Id_Buku")]
		public EntitySet<Pengembalian> Pengembalians
		{
			get
			{
				return this._Pengembalians;
			}
			set
			{
				this._Pengembalians.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Peminjamans(Peminjaman entity)
		{
			this.SendPropertyChanging();
			entity.DataBuku = this;
		}
		
		private void detach_Peminjamans(Peminjaman entity)
		{
			this.SendPropertyChanging();
			entity.DataBuku = null;
		}
		
		private void attach_Pengembalians(Pengembalian entity)
		{
			this.SendPropertyChanging();
			entity.DataBuku = this;
		}
		
		private void detach_Pengembalians(Pengembalian entity)
		{
			this.SendPropertyChanging();
			entity.DataBuku = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Peminjaman")]
	public partial class Peminjaman : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No_Pinjam;
		
		private string _Id_Buku;
		
		private System.DateTime _Tanggal_Pinjam;
		
		private int _Id_Staff;
		
		private int _Id_Student;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<DataBuku> _DataBuku;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNo_PinjamChanging(int value);
    partial void OnNo_PinjamChanged();
    partial void OnId_BukuChanging(string value);
    partial void OnId_BukuChanged();
    partial void OnTanggal_PinjamChanging(System.DateTime value);
    partial void OnTanggal_PinjamChanged();
    partial void OnId_StaffChanging(int value);
    partial void OnId_StaffChanged();
    partial void OnId_StudentChanging(int value);
    partial void OnId_StudentChanged();
    #endregion
		
		public Peminjaman()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._DataBuku = default(EntityRef<DataBuku>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Pinjam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No_Pinjam
		{
			get
			{
				return this._No_Pinjam;
			}
			set
			{
				if ((this._No_Pinjam != value))
				{
					this.OnNo_PinjamChanging(value);
					this.SendPropertyChanging();
					this._No_Pinjam = value;
					this.SendPropertyChanged("No_Pinjam");
					this.OnNo_PinjamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Buku", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Id_Buku
		{
			get
			{
				return this._Id_Buku;
			}
			set
			{
				if ((this._Id_Buku != value))
				{
					if (this._DataBuku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_BukuChanging(value);
					this.SendPropertyChanging();
					this._Id_Buku = value;
					this.SendPropertyChanged("Id_Buku");
					this.OnId_BukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tanggal_Pinjam", DbType="Date NOT NULL")]
		public System.DateTime Tanggal_Pinjam
		{
			get
			{
				return this._Tanggal_Pinjam;
			}
			set
			{
				if ((this._Tanggal_Pinjam != value))
				{
					this.OnTanggal_PinjamChanging(value);
					this.SendPropertyChanging();
					this._Tanggal_Pinjam = value;
					this.SendPropertyChanged("Tanggal_Pinjam");
					this.OnTanggal_PinjamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Staff", DbType="Int NOT NULL")]
		public int Id_Staff
		{
			get
			{
				return this._Id_Staff;
			}
			set
			{
				if ((this._Id_Staff != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_StaffChanging(value);
					this.SendPropertyChanging();
					this._Id_Staff = value;
					this.SendPropertyChanged("Id_Staff");
					this.OnId_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Student", DbType="Int NOT NULL")]
		public int Id_Student
		{
			get
			{
				return this._Id_Student;
			}
			set
			{
				if ((this._Id_Student != value))
				{
					this.OnId_StudentChanging(value);
					this.SendPropertyChanging();
					this._Id_Student = value;
					this.SendPropertyChanged("Id_Student");
					this.OnId_StudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Peminjaman_Student", Storage="_Students", ThisKey="No_Pinjam", OtherKey="No_Pinjam")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataBuku_Peminjaman", Storage="_DataBuku", ThisKey="Id_Buku", OtherKey="Id_Buku", IsForeignKey=true)]
		public DataBuku DataBuku
		{
			get
			{
				return this._DataBuku.Entity;
			}
			set
			{
				DataBuku previousValue = this._DataBuku.Entity;
				if (((previousValue != value) 
							|| (this._DataBuku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataBuku.Entity = null;
						previousValue.Peminjamans.Remove(this);
					}
					this._DataBuku.Entity = value;
					if ((value != null))
					{
						value.Peminjamans.Add(this);
						this._Id_Buku = value.Id_Buku;
					}
					else
					{
						this._Id_Buku = default(string);
					}
					this.SendPropertyChanged("DataBuku");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Peminjaman", Storage="_Staff", ThisKey="Id_Staff", OtherKey="Id_Staff", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Peminjamans.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Peminjamans.Add(this);
						this._Id_Staff = value.Id_Staff;
					}
					else
					{
						this._Id_Staff = default(int);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Peminjaman = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Peminjaman = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pengembalian")]
	public partial class Pengembalian : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No_Kembali;
		
		private string _Id_Buku;
		
		private int _Id_Staff;
		
		private System.DateTime _Tanggal_Kembali;
		
		private int _Jumlah_Denda;
		
		private int _Id_Student;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<DataBuku> _DataBuku;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNo_KembaliChanging(int value);
    partial void OnNo_KembaliChanged();
    partial void OnId_BukuChanging(string value);
    partial void OnId_BukuChanged();
    partial void OnId_StaffChanging(int value);
    partial void OnId_StaffChanged();
    partial void OnTanggal_KembaliChanging(System.DateTime value);
    partial void OnTanggal_KembaliChanged();
    partial void OnJumlah_DendaChanging(int value);
    partial void OnJumlah_DendaChanged();
    partial void OnId_StudentChanging(int value);
    partial void OnId_StudentChanged();
    #endregion
		
		public Pengembalian()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._DataBuku = default(EntityRef<DataBuku>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Kembali", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No_Kembali
		{
			get
			{
				return this._No_Kembali;
			}
			set
			{
				if ((this._No_Kembali != value))
				{
					this.OnNo_KembaliChanging(value);
					this.SendPropertyChanging();
					this._No_Kembali = value;
					this.SendPropertyChanged("No_Kembali");
					this.OnNo_KembaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Buku", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Id_Buku
		{
			get
			{
				return this._Id_Buku;
			}
			set
			{
				if ((this._Id_Buku != value))
				{
					if (this._DataBuku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_BukuChanging(value);
					this.SendPropertyChanging();
					this._Id_Buku = value;
					this.SendPropertyChanged("Id_Buku");
					this.OnId_BukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Staff", DbType="Int NOT NULL")]
		public int Id_Staff
		{
			get
			{
				return this._Id_Staff;
			}
			set
			{
				if ((this._Id_Staff != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_StaffChanging(value);
					this.SendPropertyChanging();
					this._Id_Staff = value;
					this.SendPropertyChanged("Id_Staff");
					this.OnId_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tanggal_Kembali", DbType="Date NOT NULL")]
		public System.DateTime Tanggal_Kembali
		{
			get
			{
				return this._Tanggal_Kembali;
			}
			set
			{
				if ((this._Tanggal_Kembali != value))
				{
					this.OnTanggal_KembaliChanging(value);
					this.SendPropertyChanging();
					this._Tanggal_Kembali = value;
					this.SendPropertyChanged("Tanggal_Kembali");
					this.OnTanggal_KembaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jumlah_Denda", DbType="Int NOT NULL")]
		public int Jumlah_Denda
		{
			get
			{
				return this._Jumlah_Denda;
			}
			set
			{
				if ((this._Jumlah_Denda != value))
				{
					this.OnJumlah_DendaChanging(value);
					this.SendPropertyChanging();
					this._Jumlah_Denda = value;
					this.SendPropertyChanged("Jumlah_Denda");
					this.OnJumlah_DendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Student", DbType="Int NOT NULL")]
		public int Id_Student
		{
			get
			{
				return this._Id_Student;
			}
			set
			{
				if ((this._Id_Student != value))
				{
					this.OnId_StudentChanging(value);
					this.SendPropertyChanging();
					this._Id_Student = value;
					this.SendPropertyChanged("Id_Student");
					this.OnId_StudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pengembalian_Student", Storage="_Students", ThisKey="No_Kembali", OtherKey="No_Kembali")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataBuku_Pengembalian", Storage="_DataBuku", ThisKey="Id_Buku", OtherKey="Id_Buku", IsForeignKey=true)]
		public DataBuku DataBuku
		{
			get
			{
				return this._DataBuku.Entity;
			}
			set
			{
				DataBuku previousValue = this._DataBuku.Entity;
				if (((previousValue != value) 
							|| (this._DataBuku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataBuku.Entity = null;
						previousValue.Pengembalians.Remove(this);
					}
					this._DataBuku.Entity = value;
					if ((value != null))
					{
						value.Pengembalians.Add(this);
						this._Id_Buku = value.Id_Buku;
					}
					else
					{
						this._Id_Buku = default(string);
					}
					this.SendPropertyChanged("DataBuku");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Pengembalian", Storage="_Staff", ThisKey="Id_Staff", OtherKey="Id_Staff", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Pengembalians.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Pengembalians.Add(this);
						this._Id_Staff = value.Id_Staff;
					}
					else
					{
						this._Id_Staff = default(int);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Pengembalian = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Pengembalian = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Staff;
		
		private string _Nama_Staff;
		
		private char _Gender_Staff;
		
		private string _Username;
		
		private string _Password_staff;
		
		private EntitySet<Peminjaman> _Peminjamans;
		
		private EntitySet<Pengembalian> _Pengembalians;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_StaffChanging(int value);
    partial void OnId_StaffChanged();
    partial void OnNama_StaffChanging(string value);
    partial void OnNama_StaffChanged();
    partial void OnGender_StaffChanging(char value);
    partial void OnGender_StaffChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPassword_staffChanging(string value);
    partial void OnPassword_staffChanged();
    #endregion
		
		public Staff()
		{
			this._Peminjamans = new EntitySet<Peminjaman>(new Action<Peminjaman>(this.attach_Peminjamans), new Action<Peminjaman>(this.detach_Peminjamans));
			this._Pengembalians = new EntitySet<Pengembalian>(new Action<Pengembalian>(this.attach_Pengembalians), new Action<Pengembalian>(this.detach_Pengembalians));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Staff", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Staff
		{
			get
			{
				return this._Id_Staff;
			}
			set
			{
				if ((this._Id_Staff != value))
				{
					this.OnId_StaffChanging(value);
					this.SendPropertyChanging();
					this._Id_Staff = value;
					this.SendPropertyChanged("Id_Staff");
					this.OnId_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama_Staff", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nama_Staff
		{
			get
			{
				return this._Nama_Staff;
			}
			set
			{
				if ((this._Nama_Staff != value))
				{
					this.OnNama_StaffChanging(value);
					this.SendPropertyChanging();
					this._Nama_Staff = value;
					this.SendPropertyChanged("Nama_Staff");
					this.OnNama_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender_Staff", DbType="Char(1) NOT NULL")]
		public char Gender_Staff
		{
			get
			{
				return this._Gender_Staff;
			}
			set
			{
				if ((this._Gender_Staff != value))
				{
					this.OnGender_StaffChanging(value);
					this.SendPropertyChanging();
					this._Gender_Staff = value;
					this.SendPropertyChanged("Gender_Staff");
					this.OnGender_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password_staff", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password_staff
		{
			get
			{
				return this._Password_staff;
			}
			set
			{
				if ((this._Password_staff != value))
				{
					this.OnPassword_staffChanging(value);
					this.SendPropertyChanging();
					this._Password_staff = value;
					this.SendPropertyChanged("Password_staff");
					this.OnPassword_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Peminjaman", Storage="_Peminjamans", ThisKey="Id_Staff", OtherKey="Id_Staff")]
		public EntitySet<Peminjaman> Peminjamans
		{
			get
			{
				return this._Peminjamans;
			}
			set
			{
				this._Peminjamans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Pengembalian", Storage="_Pengembalians", ThisKey="Id_Staff", OtherKey="Id_Staff")]
		public EntitySet<Pengembalian> Pengembalians
		{
			get
			{
				return this._Pengembalians;
			}
			set
			{
				this._Pengembalians.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Peminjamans(Peminjaman entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Peminjamans(Peminjaman entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Pengembalians(Pengembalian entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Pengembalians(Pengembalian entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Student;
		
		private string _Nama_Student;
		
		private string _Alamat_Student;
		
		private long _No_Hp;
		
		private int _No_Kembali;
		
		private int _No_Pinjam;
		
		private EntityRef<Pengembalian> _Pengembalian;
		
		private EntityRef<Peminjaman> _Peminjaman;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_StudentChanging(int value);
    partial void OnId_StudentChanged();
    partial void OnNama_StudentChanging(string value);
    partial void OnNama_StudentChanged();
    partial void OnAlamat_StudentChanging(string value);
    partial void OnAlamat_StudentChanged();
    partial void OnNo_HpChanging(long value);
    partial void OnNo_HpChanged();
    partial void OnNo_KembaliChanging(int value);
    partial void OnNo_KembaliChanged();
    partial void OnNo_PinjamChanging(int value);
    partial void OnNo_PinjamChanged();
    #endregion
		
		public Student()
		{
			this._Pengembalian = default(EntityRef<Pengembalian>);
			this._Peminjaman = default(EntityRef<Peminjaman>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Student", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Student
		{
			get
			{
				return this._Id_Student;
			}
			set
			{
				if ((this._Id_Student != value))
				{
					this.OnId_StudentChanging(value);
					this.SendPropertyChanging();
					this._Id_Student = value;
					this.SendPropertyChanged("Id_Student");
					this.OnId_StudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama_Student", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nama_Student
		{
			get
			{
				return this._Nama_Student;
			}
			set
			{
				if ((this._Nama_Student != value))
				{
					this.OnNama_StudentChanging(value);
					this.SendPropertyChanging();
					this._Nama_Student = value;
					this.SendPropertyChanged("Nama_Student");
					this.OnNama_StudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alamat_Student", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Alamat_Student
		{
			get
			{
				return this._Alamat_Student;
			}
			set
			{
				if ((this._Alamat_Student != value))
				{
					this.OnAlamat_StudentChanging(value);
					this.SendPropertyChanging();
					this._Alamat_Student = value;
					this.SendPropertyChanged("Alamat_Student");
					this.OnAlamat_StudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Hp", DbType="BigInt NOT NULL")]
		public long No_Hp
		{
			get
			{
				return this._No_Hp;
			}
			set
			{
				if ((this._No_Hp != value))
				{
					this.OnNo_HpChanging(value);
					this.SendPropertyChanging();
					this._No_Hp = value;
					this.SendPropertyChanged("No_Hp");
					this.OnNo_HpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Kembali", DbType="Int NOT NULL")]
		public int No_Kembali
		{
			get
			{
				return this._No_Kembali;
			}
			set
			{
				if ((this._No_Kembali != value))
				{
					if (this._Pengembalian.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNo_KembaliChanging(value);
					this.SendPropertyChanging();
					this._No_Kembali = value;
					this.SendPropertyChanged("No_Kembali");
					this.OnNo_KembaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Pinjam", DbType="Int NOT NULL")]
		public int No_Pinjam
		{
			get
			{
				return this._No_Pinjam;
			}
			set
			{
				if ((this._No_Pinjam != value))
				{
					if (this._Peminjaman.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNo_PinjamChanging(value);
					this.SendPropertyChanging();
					this._No_Pinjam = value;
					this.SendPropertyChanged("No_Pinjam");
					this.OnNo_PinjamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pengembalian_Student", Storage="_Pengembalian", ThisKey="No_Kembali", OtherKey="No_Kembali", IsForeignKey=true)]
		public Pengembalian Pengembalian
		{
			get
			{
				return this._Pengembalian.Entity;
			}
			set
			{
				Pengembalian previousValue = this._Pengembalian.Entity;
				if (((previousValue != value) 
							|| (this._Pengembalian.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pengembalian.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Pengembalian.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._No_Kembali = value.No_Kembali;
					}
					else
					{
						this._No_Kembali = default(int);
					}
					this.SendPropertyChanged("Pengembalian");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Peminjaman_Student", Storage="_Peminjaman", ThisKey="No_Pinjam", OtherKey="No_Pinjam", IsForeignKey=true)]
		public Peminjaman Peminjaman
		{
			get
			{
				return this._Peminjaman.Entity;
			}
			set
			{
				Peminjaman previousValue = this._Peminjaman.Entity;
				if (((previousValue != value) 
							|| (this._Peminjaman.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Peminjaman.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Peminjaman.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._No_Pinjam = value.No_Pinjam;
					}
					else
					{
						this._No_Pinjam = default(int);
					}
					this.SendPropertyChanged("Peminjaman");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
